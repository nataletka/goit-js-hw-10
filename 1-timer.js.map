{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('button[data-start]');\nconst inputDate = document.getElementById('datetime-picker');\nlet userSelectedDate;\nlet timerInterval;\nstartBtn.disabled = true;\n\nflatpickr(inputDate, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] <= new Date()) {\n      iziToast.info({\n        title: 'Hello',\n        message: 'Please choose a date in the future',\n      });\n\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDates[0];\n      startBtn.disabled = false;\n    }\n  },\n});\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n  startBtn.disabled = true;\n  inputDate.disabled = true;\n\n  timerInterval = setInterval(() => {\n    const timeRemaining = userSelectedDate - new Date();\n    if (timeRemaining <= 0) {\n      clearInterval(timerInterval);\n      updateTimer(0, 0, 0, 0);\n      inputDate.disabled = false;\n      startBtn.disabled = true;\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n    updateTimer(days, hours, minutes, seconds);\n  }, 1000);\n});\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer(days, hours, minutes, seconds) {\n  document.querySelector('[data-days]').textContent = String(days).padStart(\n    2,\n    '0'\n  );\n  document.querySelector('[data-hours]').textContent = String(hours).padStart(\n    2,\n    '0'\n  );\n  document.querySelector('[data-minutes]').textContent = String(\n    minutes\n  ).padStart(2, '0');\n  document.querySelector('[data-seconds]').textContent = String(\n    seconds\n  ).padStart(2, '0');\n}\n"],"names":["startBtn","inputDate","userSelectedDate","timerInterval","flatpickr","selectedDates","iziToast","timeRemaining","updateTimer","days","hours","minutes","seconds","convertMs","ms"],"mappings":"+IAOA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAY,SAAS,eAAe,iBAAiB,EAC3D,IAAIC,EACAC,EACJH,EAAS,SAAW,GAEpBI,EAAUH,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQI,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,GAAK,IAAI,MAC1BC,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,oCACjB,CAAO,EAEDN,EAAS,SAAW,KAEpBE,EAAmBG,EAAc,CAAC,EAClCL,EAAS,SAAW,GAEvB,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CAClCE,IACLF,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBE,EAAgB,YAAY,IAAM,CAChC,MAAMI,EAAgBL,EAAmB,IAAI,KAC7C,GAAIK,GAAiB,EAAG,CACtB,cAAcJ,CAAa,EAC3BK,EAAY,EAAG,EAAG,EAAG,CAAC,EACtBP,EAAU,SAAW,GACrBD,EAAS,SAAW,GACpB,MACN,CACI,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EAAUN,CAAa,EACjEC,EAAYC,EAAMC,EAAOC,EAASC,CAAO,CAC1C,EAAE,GAAI,EACT,CAAC,EACD,SAASC,EAAUC,EAAI,CAQrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAE1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EAEpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EAEjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAEA,SAASJ,EAAYC,EAAMC,EAAOC,EAASC,EAAS,CAClD,SAAS,cAAc,aAAa,EAAE,YAAc,OAAOH,CAAI,EAAE,SAC/D,EACA,GACD,EACD,SAAS,cAAc,cAAc,EAAE,YAAc,OAAOC,CAAK,EAAE,SACjE,EACA,GACD,EACD,SAAS,cAAc,gBAAgB,EAAE,YAAc,OACrDC,CACJ,EAAI,SAAS,EAAG,GAAG,EACjB,SAAS,cAAc,gBAAgB,EAAE,YAAc,OACrDC,CACJ,EAAI,SAAS,EAAG,GAAG,CACnB"}